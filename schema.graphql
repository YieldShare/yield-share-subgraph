# YieldShareFactory entities

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TreasuryChanged @entity(immutable: true) {
  id: Bytes!
  oldTreasury: Bytes! # address
  newTreasury: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type YieldShareVaultCreated @entity(immutable: true) {
  id: Bytes!
  vault: Bytes! # address
  yieldShare: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type YieldShare @entity(immutable: true) {
  id: Bytes! # address
  vault: Bytes! # address
}

# YieldShare contracts entities

type Balance @entity {
  id: Bytes!
  contract: YieldShare! # address
  user: Bytes! # address
  shares: BigInt!
}

type SharesDeposited @entity(immutable: true) {
  id: Bytes!
  contract: YieldShare! # address
  user: Bytes! # address
  shares: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SharesWithdrawn @entity(immutable: true) {
  id: Bytes!
  contract: YieldShare! # address
  user: Bytes! # address
  shares: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type YieldSharingCollected @entity(immutable: true) {
  id: Bytes!
  contract: YieldShare! # address
  from: Bytes! # address
  to: Bytes! # address
  senderBalance: BigInt! # uint256
  receiverBalance: BigInt! # uint256
  feeBalance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type YieldSharingStarted @entity(immutable: true) {
  id: Bytes!
  contract: YieldShare! # address
  from: Bytes! # address
  to: Bytes! # address
  shares: BigInt! # uint256
  assets: BigInt! # uint256
  percentage: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type YieldSharingStopped @entity(immutable: true) {
  id: Bytes!
  contract: YieldShare! # address
  from: Bytes! # address
  to: Bytes! # address
  senderBalance: BigInt! # uint256
  receiverBalance: BigInt! # uint256
  feeBalance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
